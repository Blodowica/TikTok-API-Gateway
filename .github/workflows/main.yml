name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.201

      - name: Restore dependencies
        run: dotnet restore TikTokClone-API-Gateway
      
      - name: Build
        working-directory: ./TikTokClone-API-Gateway
        run: dotnet build  --configuration Release --no-restore
    

  analyze:
    runs-on: windows-latest
    needs: build

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"Blodowica_TikTok-Clone-User-Servcie" /o:"blodowica" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build TikTokClone-API-Gateway --no-incremental
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  security:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.201
      
      - name: Restore dependencies
        run: dotnet restore TikTokClone-API-Gateway
        
      - name: Run Snyk to check for vulnerabilities
        run: |
          cd ./TikTokClone-API-Gateway
          npm install -g snyk
          snyk auth ${{ secrets.SNYK_TOKEN }}
          snyk test --sarif-file-output=snyk.sarif
        continue-on-error: true

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ./TikTokClone-API-Gateway/snyk.sarif

  deploy:
    runs-on: ubuntu-latest
    needs: [build, analyze, security]

    steps:
      - uses: actions/checkout@v3

      - name: Docker Build and Push
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          cd ./TikTokClone-API-Gateway
          docker build -t tiktokclone-api-gateway .
          docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_TOKEN
          docker tag tiktokclone-api-gateway $DOCKERHUB_USERNAME/tiktokclone-api-gateway
          docker push $DOCKERHUB_USERNAME/tiktokclone-api-gateway:latest

      - name: Deploy to Azure App Service
        uses: Azure/webapps-deploy@v2
        with:
          app-name: viral-loop-api-gateway
          images: ${{ secrets.DOCKERHUB_USERNAME }}/tiktokclone-api-gateway:latest
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
